blueprint:
  name: Send a camera snapshot when something is opened
  description: Send a camera snapshot when something is opened
  domain: automation
  input:
    door_window_sensor:
      name: Opening sensor
      description: The sensor wich triggers the snapshot creation
      selector:
        entity:
          domain: binary_sensor
          device_class: opening

    camera:
      name: Camera
      description: The camera which creates the snapshot
      selector:
        entity:
          domain: camera

    alarmo_device:
      name: Alarmo Instance
      description: The instance triggering the alarm
      selector:
        entity:
          domain: alarm_control_panel

    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications
      selector:
        device:
          integration: mobile_app

    is_ios:
      name: Is it an iOS device?
      description: Toggle if your selected device runs iOS, default is Android
      selector:
        boolean:
      default: false

    notification_title:
      name: Notification title (Optional)
      description: 'Default: "Motion detected!"'
      default: "Motion detected!"

    notification_message:
      name: Notification message (Optional)
      description: 'Default: "{{ door_window_sensor_name }} detected movement!"'
      default: "{{ door_window_sensor_name }} detected movement!"

    delay:
      name: Delay (Optional)
      description: Wait before creating camera snapshot
      default: ""
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
          mode: slider

trigger:
  platform: state
  entity_id: !input door_window_sensor
  from: "off"
  to: "on"

condition:
  - condition: state
    entity_id: !input alarmo_device
    state: triggered
    attribute: arm_mode

variables:
  door_window_sensor: !input door_window_sensor
  door_window_sensor_name: "{{ states[door_window_sensor].name }}"
  camera: !input camera
  notify_device: !input notify_device
  is_ios: !input is_ios
  notification_title: !input notification_title
  notification_message: !input notification_message
  delay: !input delay
  snapshot_create_file_path: "/config/www/camera_captures/snapshot_{{ states[camera].object_id }}.jpg"
  snapshot_access_file_path: "{{ snapshot_create_file_path | replace('/config/www','/local') }}"

action:
  - delay: "{{ delay }}"

  - service: camera.snapshot
    entity_id: !input camera
    data:
      filename: "{{ snapshot_create_file_path }}"

  - device_id: !input notify_device
    domain: mobile_appxtracte 
    type: notify
    title: "{{ notification_title }}"
    message: "{{ notification_message }}"
    data: >
      '{% set android_data = {"image": "%s"} | format(snapshot_access_file_path) %}
      {% set ios_data = {"attachment": {"url": "%s", "content_type": "JPEG"}} | format(snapshot_access_file_path) %}
      {{ ios_data if is_ios else android_data }}'
